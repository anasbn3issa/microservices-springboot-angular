version: "3.8"
services:
  eureka:
    hostname: eureka
    restart: unless-stopped
    build: .\eureka
    ports:
      - "8761:8761"
    networks:
      - vaccination-mysql
      - ms-network
    container_name: eureka
    image: "eureka"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://eureka:8761/actuator/health"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 20s
    environment:
      - eureka.instance.hostname=eureka
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka/
   

  mysqldb:
    image: mysql:8
    networks:
      - vaccination-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=vaccination
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10

  vaccination:
    container_name: vaccination
    build: .\Vaccination
    ports:
      - "8091:8091"
    hostname: vaccination
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb/vaccination?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
    image: "vaccination"
    healthcheck:
      test: curl --fail http://vaccination:8091 || exit 1
      interval: 60s
      retries: 5
      start_period: 15s
      timeout: 10s
    networks:
      - vaccination-mysql
      - ms-network
    depends_on:
      mysqldb:
        condition: service_healthy
      eureka:
          condition: service_healthy  
     
  # redis:
  #   image: redis:6.2-alpine
  #   command: ["redis-server","--protected-mode", "no","--port","6379"]
  #   restart: unless-stopped
  #   hostname: redis
  #   container_name: redis
  #   networks:
  #     - ms-network
  #   environment:
  #     # ALLOW_EMPTY_PASSWORD is recommended only for development.
  #     - ALLOW_EMPTY_PASSWORD=yes
  #     - REDIS_PORT_NUMBER=6379
  #   ports:
  #     - "6379:6379"
  #   healthcheck:
  #       test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
  #       interval: 30s
  #       timeout: 10s
  #       retries: 5
  #   volumes: 
  #     - cache:/data
      
  # # postgres:
  # #   image: postgres:13.2
  # #   restart: unless-stopped
  # #   container_name: postgres
  # #   ports:
  # #     - "5432:5432"
  # #   networks:
  # #     - ms-network
  # #   environment:
  # #     - POSTGRES_USER=postgres
  # #     - POSTGRES_PASSWORD=postgres
  # #     - POSTGRES_DB=rewards
  # #     - PGDATA=/data/postgres
  # #   healthcheck:
  # #     test: ["CMD", "pg_isready", "-U", "postgres"]
  # #     interval: 10s
  # #     timeout: 5s
  # #     retries: 5
  # #     start_period: 20s
  
  # # reward:
  # #   hostname: reward
  # #   build: ./reward
  # #   ports:
  # #     - "8085:8085"
  # #   networks:
  # #     - ms-network
  # #   container_name: reward
  # #   image: "reward"
  # #   depends_on:
  # #     postgres:
  # #       condition: service_healthy
  # #     eureka:
  # #         condition: service_healthy 
  # #   healthcheck:
  # #       test: ["CMD", "curl", "-f", "http://reward:8085/actuator/health"]
  # #       interval: 10s
  # #       timeout: 5s
  # #       retries: 5
  # #       start_period: 20s
  # #   environment:
  # #     - eureka.client.server-url.default-zone=http://eureka:8761/eureka
  # #     - spring.datasource.url=jdbc:postgresql://postgres:5432/rewards
  # #     - spring.datasource.username=postgres
  # #     - spring.datasource.password=postgres
      
  # sterilization:
  #   hostname: sterilization
  #   container_name: sterilization
  #   build: .\sterilization-veterinarian
  #   ports:
  #     - "8082:8082"
  #   networks:
  #     - ms-network
  #   environment:
  #     - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
  #     - REDIS_HOST=redis
  #     - REDIS_PORT= 6379
  #   image: "sterilization"
  #   healthcheck:
  #     test: curl --fail http://sterilization:8082 || exit 1
  #     interval: 60s
  #     retries: 5
  #     start_period: 15s
  #     timeout: 10s
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #     eureka:
  #         condition: service_healthy 

  gateway:
    hostname: gateway
    container_name: gateway
    restart: on-failure
    build: .\APIGateway-3
    ports:
      - "8888:8888"
    networks:
      - ms-network
    environment:
      - eureka.client.service-url.defaultZone=http://eureka:8761/eureka
      - SPRING_PROFILES_ACTIVE=test
    image: "gateway"
    depends_on:
      vaccination:
        condition: service_healthy
    #   sterilization:
    #       condition: service_healthy

  pet:
    build: .\pet
    hostname: pet
    image: "pet"
    ports:
      - "5000:5000"
    stdin_open: true
    tty: true
    networks:
      - ms-network
    depends_on:
      eureka:
          condition: service_healthy 

  
volumes:
  cache:
    driver: local
networks:
  vaccination-mysql:
  ms-network:
    driver: bridge